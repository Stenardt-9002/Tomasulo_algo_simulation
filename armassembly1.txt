
run3:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	pushq  0x2f8a(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmpq *0x2f8b(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <__cxa_atexit@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 55 2f 00 00 	bnd jmpq *0x2f55(%rip)        # 3fc0 <__cxa_atexit@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001070 <_ZNSt8ios_base4InitC1Ev@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 4d 2f 00 00 	bnd jmpq *0x2f4d(%rip)        # 3fc8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	4c 8d 05 46 03 00 00 	lea    0x346(%rip),%r8        # 13e0 <__libc_csu_fini>
    109a:	48 8d 0d cf 02 00 00 	lea    0x2cf(%rip),%rcx        # 1370 <__libc_csu_init>
    10a1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1169 <main>
    10a8:	ff 15 32 2f 00 00    	callq  *0x2f32(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ae:	f4                   	hlt    
    10af:	90                   	nop

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d 9a 2e 00 00 	cmpq   $0x0,0x2e9a(%rip)        # 3fd0 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	callq  1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	callq  10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	retq   
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001169 <main>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%rbp)
    1178:	c7 45 98 02 00 00 00 	movl   $0x2,-0x68(%rbp)
    117f:	c7 45 9c 03 00 00 00 	movl   $0x3,-0x64(%rbp)
    1186:	c7 45 a0 04 00 00 00 	movl   $0x4,-0x60(%rbp)
    118d:	c7 45 a4 05 00 00 00 	movl   $0x5,-0x5c(%rbp)
    1194:	c7 45 a8 06 00 00 00 	movl   $0x6,-0x58(%rbp)
    119b:	c7 45 ac 07 00 00 00 	movl   $0x7,-0x54(%rbp)
    11a2:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
    11a9:	c7 45 b4 09 00 00 00 	movl   $0x9,-0x4c(%rbp)
    11b0:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
    11b7:	c7 45 bc 02 00 00 00 	movl   $0x2,-0x44(%rbp)
    11be:	c7 45 c0 03 00 00 00 	movl   $0x3,-0x40(%rbp)
    11c5:	c7 45 c4 04 00 00 00 	movl   $0x4,-0x3c(%rbp)
    11cc:	c7 45 c8 05 00 00 00 	movl   $0x5,-0x38(%rbp)
    11d3:	c7 45 cc 06 00 00 00 	movl   $0x6,-0x34(%rbp)
    11da:	c7 45 d0 07 00 00 00 	movl   $0x7,-0x30(%rbp)
    11e1:	c7 45 d4 08 00 00 00 	movl   $0x8,-0x2c(%rbp)
    11e8:	c7 45 d8 09 00 00 00 	movl   $0x9,-0x28(%rbp)
    11ef:	8b 45 94             	mov    -0x6c(%rbp),%eax
    11f2:	0f af 45 b8          	imul   -0x48(%rbp),%eax
    11f6:	89 c2                	mov    %eax,%edx
    11f8:	8b 45 98             	mov    -0x68(%rbp),%eax
    11fb:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    11ff:	01 c2                	add    %eax,%edx
    1201:	8b 45 9c             	mov    -0x64(%rbp),%eax
    1204:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    1208:	01 d0                	add    %edx,%eax
    120a:	89 45 dc             	mov    %eax,-0x24(%rbp)
    120d:	8b 45 94             	mov    -0x6c(%rbp),%eax
    1210:	0f af 45 bc          	imul   -0x44(%rbp),%eax
    1214:	89 c2                	mov    %eax,%edx
    1216:	8b 45 98             	mov    -0x68(%rbp),%eax
    1219:	0f af 45 c8          	imul   -0x38(%rbp),%eax
    121d:	01 c2                	add    %eax,%edx
    121f:	8b 45 9c             	mov    -0x64(%rbp),%eax
    1222:	0f af 45 d4          	imul   -0x2c(%rbp),%eax
    1226:	01 d0                	add    %edx,%eax
    1228:	89 45 e0             	mov    %eax,-0x20(%rbp)
    122b:	8b 45 94             	mov    -0x6c(%rbp),%eax
    122e:	0f af 45 c0          	imul   -0x40(%rbp),%eax
    1232:	89 c2                	mov    %eax,%edx
    1234:	8b 45 98             	mov    -0x68(%rbp),%eax
    1237:	0f af 45 cc          	imul   -0x34(%rbp),%eax
    123b:	01 c2                	add    %eax,%edx
    123d:	8b 45 9c             	mov    -0x64(%rbp),%eax
    1240:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1244:	01 d0                	add    %edx,%eax
    1246:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    1249:	8b 45 a0             	mov    -0x60(%rbp),%eax
    124c:	0f af 45 b8          	imul   -0x48(%rbp),%eax
    1250:	89 c2                	mov    %eax,%edx
    1252:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    1255:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    1259:	01 c2                	add    %eax,%edx
    125b:	8b 45 a8             	mov    -0x58(%rbp),%eax
    125e:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    1262:	01 d0                	add    %edx,%eax
    1264:	89 45 e8             	mov    %eax,-0x18(%rbp)
    1267:	8b 45 a0             	mov    -0x60(%rbp),%eax
    126a:	0f af 45 bc          	imul   -0x44(%rbp),%eax
    126e:	89 c2                	mov    %eax,%edx
    1270:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    1273:	0f af 45 c8          	imul   -0x38(%rbp),%eax
    1277:	01 c2                	add    %eax,%edx
    1279:	8b 45 a8             	mov    -0x58(%rbp),%eax
    127c:	0f af 45 d4          	imul   -0x2c(%rbp),%eax
    1280:	01 d0                	add    %edx,%eax
    1282:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1285:	8b 45 a0             	mov    -0x60(%rbp),%eax
    1288:	0f af 45 c0          	imul   -0x40(%rbp),%eax
    128c:	89 c2                	mov    %eax,%edx
    128e:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    1291:	0f af 45 cc          	imul   -0x34(%rbp),%eax
    1295:	01 c2                	add    %eax,%edx
    1297:	8b 45 9c             	mov    -0x64(%rbp),%eax
    129a:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    129e:	01 d0                	add    %edx,%eax
    12a0:	89 45 f0             	mov    %eax,-0x10(%rbp)
    12a3:	8b 45 ac             	mov    -0x54(%rbp),%eax
    12a6:	0f af 45 b8          	imul   -0x48(%rbp),%eax
    12aa:	89 c2                	mov    %eax,%edx
    12ac:	8b 45 b0             	mov    -0x50(%rbp),%eax
    12af:	0f af 45 c4          	imul   -0x3c(%rbp),%eax
    12b3:	01 c2                	add    %eax,%edx
    12b5:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    12b8:	0f af 45 d0          	imul   -0x30(%rbp),%eax
    12bc:	01 d0                	add    %edx,%eax
    12be:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12c1:	8b 45 ac             	mov    -0x54(%rbp),%eax
    12c4:	0f af 45 bc          	imul   -0x44(%rbp),%eax
    12c8:	89 c2                	mov    %eax,%edx
    12ca:	8b 45 b0             	mov    -0x50(%rbp),%eax
    12cd:	0f af 45 c8          	imul   -0x38(%rbp),%eax
    12d1:	01 c2                	add    %eax,%edx
    12d3:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    12d6:	0f af 45 d4          	imul   -0x2c(%rbp),%eax
    12da:	01 d0                	add    %edx,%eax
    12dc:	89 45 f8             	mov    %eax,-0x8(%rbp)
    12df:	8b 45 ac             	mov    -0x54(%rbp),%eax
    12e2:	0f af 45 c0          	imul   -0x40(%rbp),%eax
    12e6:	89 c2                	mov    %eax,%edx
    12e8:	8b 45 b0             	mov    -0x50(%rbp),%eax
    12eb:	0f af 45 cc          	imul   -0x34(%rbp),%eax
    12ef:	01 c2                	add    %eax,%edx
    12f1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    12f4:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    12f8:	01 d0                	add    %edx,%eax
    12fa:	89 45 fc             	mov    %eax,-0x4(%rbp)
    12fd:	b8 00 00 00 00       	mov    $0x0,%eax
    1302:	5d                   	pop    %rbp
    1303:	c3                   	retq   

0000000000001304 <_Z41__static_initialization_and_destruction_0ii>:
    1304:	f3 0f 1e fa          	endbr64 
    1308:	55                   	push   %rbp
    1309:	48 89 e5             	mov    %rsp,%rbp
    130c:	48 83 ec 10          	sub    $0x10,%rsp
    1310:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1313:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1316:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    131a:	75 32                	jne    134e <_Z41__static_initialization_and_destruction_0ii+0x4a>
    131c:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    1323:	75 29                	jne    134e <_Z41__static_initialization_and_destruction_0ii+0x4a>
    1325:	48 8d 3d e5 2c 00 00 	lea    0x2ce5(%rip),%rdi        # 4011 <_ZStL8__ioinit>
    132c:	e8 3f fd ff ff       	callq  1070 <_ZNSt8ios_base4InitC1Ev@plt>
    1331:	48 8d 15 d0 2c 00 00 	lea    0x2cd0(%rip),%rdx        # 4008 <__dso_handle>
    1338:	48 8d 35 d2 2c 00 00 	lea    0x2cd2(%rip),%rsi        # 4011 <_ZStL8__ioinit>
    133f:	48 8b 05 b2 2c 00 00 	mov    0x2cb2(%rip),%rax        # 3ff8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    1346:	48 89 c7             	mov    %rax,%rdi
    1349:	e8 12 fd ff ff       	callq  1060 <__cxa_atexit@plt>
    134e:	90                   	nop
    134f:	c9                   	leaveq 
    1350:	c3                   	retq   

0000000000001351 <_GLOBAL__sub_I_main>:
    1351:	f3 0f 1e fa          	endbr64 
    1355:	55                   	push   %rbp
    1356:	48 89 e5             	mov    %rsp,%rbp
    1359:	be ff ff 00 00       	mov    $0xffff,%esi
    135e:	bf 01 00 00 00       	mov    $0x1,%edi
    1363:	e8 9c ff ff ff       	callq  1304 <_Z41__static_initialization_and_destruction_0ii>
    1368:	5d                   	pop    %rbp
    1369:	c3                   	retq   
    136a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001370 <__libc_csu_init>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	41 57                	push   %r15
    1376:	4c 8d 3d 13 2a 00 00 	lea    0x2a13(%rip),%r15        # 3d90 <__frame_dummy_init_array_entry>
    137d:	41 56                	push   %r14
    137f:	49 89 d6             	mov    %rdx,%r14
    1382:	41 55                	push   %r13
    1384:	49 89 f5             	mov    %rsi,%r13
    1387:	41 54                	push   %r12
    1389:	41 89 fc             	mov    %edi,%r12d
    138c:	55                   	push   %rbp
    138d:	48 8d 2d 0c 2a 00 00 	lea    0x2a0c(%rip),%rbp        # 3da0 <__do_global_dtors_aux_fini_array_entry>
    1394:	53                   	push   %rbx
    1395:	4c 29 fd             	sub    %r15,%rbp
    1398:	48 83 ec 08          	sub    $0x8,%rsp
    139c:	e8 5f fc ff ff       	callq  1000 <_init>
    13a1:	48 c1 fd 03          	sar    $0x3,%rbp
    13a5:	74 1f                	je     13c6 <__libc_csu_init+0x56>
    13a7:	31 db                	xor    %ebx,%ebx
    13a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13b0:	4c 89 f2             	mov    %r14,%rdx
    13b3:	4c 89 ee             	mov    %r13,%rsi
    13b6:	44 89 e7             	mov    %r12d,%edi
    13b9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    13bd:	48 83 c3 01          	add    $0x1,%rbx
    13c1:	48 39 dd             	cmp    %rbx,%rbp
    13c4:	75 ea                	jne    13b0 <__libc_csu_init+0x40>
    13c6:	48 83 c4 08          	add    $0x8,%rsp
    13ca:	5b                   	pop    %rbx
    13cb:	5d                   	pop    %rbp
    13cc:	41 5c                	pop    %r12
    13ce:	41 5d                	pop    %r13
    13d0:	41 5e                	pop    %r14
    13d2:	41 5f                	pop    %r15
    13d4:	c3                   	retq   
    13d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    13dc:	00 00 00 00 

00000000000013e0 <__libc_csu_fini>:
    13e0:	f3 0f 1e fa          	endbr64 
    13e4:	c3                   	retq   

Disassembly of section .fini:

00000000000013e8 <_fini>:
    13e8:	f3 0f 1e fa          	endbr64 
    13ec:	48 83 ec 08          	sub    $0x8,%rsp
    13f0:	48 83 c4 08          	add    $0x8,%rsp
    13f4:	c3                   	retq   
